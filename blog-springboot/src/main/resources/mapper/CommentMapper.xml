<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.apecode.blog.mapper.CommentMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.apecode.blog.entity.Comment">
        <id column="id" property="id" />
        <result column="userId" property="userId" />
        <result column="topicId" property="topicId" />
        <result column="commentContent" property="commentContent" />
        <result column="parentId" property="parentId" />
        <result column="type" property="type" />
        <result column="replyUserId" property="replyUserId" />
        <result column="replyCommentId" property="replyCommentId" />
        <result column="rectangle" property="rectangle" />
        <result column="ipAddress" property="ipAddress"/>
        <result column="ipSource" property="ipSource"/>
        <result column="browser" property="browser"/>
        <result column="os" property="os"/>
        <result column="isReview" property="isReview" />
        <result column="isDelete" property="isDelete" />
        <result column="createTime" property="createTime" />
        <result column="updateTime" property="updateTime" />
    </resultMap>

    <resultMap id="CommentFrontResult" type="cn.apecode.blog.dto.CommentFrontDto" >
        <id column="id" property="id" />
        <result column="commentContent" property="commentContent" />
        <result column="rectangle" property="distance" />
        <result column="browser" property="browser"/>
        <result column="os" property="os"/>
        <result column="createTime" property="createTime" />
        <collection property="user" ofType="cn.apecode.blog.dto.SimpleUserInfoDto" >
            <result column="uid" property="uid" />
            <result column="nickname" property="nickname" />
            <result column="avatar" property="avatar" />
            <result column="intro" property="intro" />
            <result column="webSite" property="webSite" />
        </collection>
    </resultMap>

    <resultMap id="ReplyDtoResult" type="cn.apecode.blog.dto.ReplyDto" >
        <id column="id" property="id" />
        <result column="parentId" property="parentId" />
        <result column="commentContent" property="commentContent" />
        <result column="replyCommentId" property="replyCommentId" />
        <result column="rectangle" property="distance" />
        <result column="browser" property="browser"/>
        <result column="os" property="os"/>
        <result column="createTime" property="createTime" />
        <collection property="user" ofType="cn.apecode.blog.dto.SimpleUserInfoDto" >
            <result column="uid" property="uid" />
            <result column="nickname" property="nickname" />
            <result column="avatar" property="avatar" />
            <result column="intro" property="intro" />
            <result column="webSite" property="webSite" />
        </collection>
        <collection property="replyUser" ofType="cn.apecode.blog.dto.SimpleUserInfoDto" >
            <result column="replyUid" property="uid" />
            <result column="replyNickname" property="nickname" />
            <result column="replyAvatar" property="avatar" />
            <result column="replyIntro" property="intro" />
            <result column="replyWebSite" property="webSite" />
        </collection>
    </resultMap>

    <resultMap id="CommentBackResult" type="cn.apecode.blog.dto.CommentBackDto" >
        <id column="id" property="id" />
        <result column="commentContent" property="commentContent" />
        <result column="parentId" property="parentId" />
        <result column="articleTitle" property="articleTitle" />
        <result column="type" property="type" />
        <result column="ipSource" property="ipSource"/>
        <result column="browser" property="browser"/>
        <result column="os" property="os"/>
        <result column="isReview" property="isReview" />
        <result column="createTime" property="createTime" />
        <collection property="user" ofType="cn.apecode.blog.dto.SimpleUserInfoDto" >
            <result column="uid" property="uid" />
            <result column="nickname" property="nickname" />
            <result column="avatar" property="avatar" />
            <result column="intro" property="intro" />
            <result column="webSite" property="webSite" />
        </collection>
        <collection property="replyUser" ofType="cn.apecode.blog.dto.SimpleUserInfoDto" >
            <result column="replyUid" property="uid" />
            <result column="replyNickname" property="nickname" />
            <result column="replyAvatar" property="avatar" />
            <result column="replyIntro" property="intro" />
            <result column="replyWebSite" property="webSite" />
        </collection>
    </resultMap>

    <resultMap id="NewCommentResult" type="cn.apecode.blog.dto.NewCommentDto">
        <result column="topicId" property="topicId"/>
        <result column="type" property="type"/>
        <result column="commentContent" property="commentContent"/>
        <result column="createTime" property="createTime"/>
        <collection property="user" ofType="cn.apecode.blog.dto.SimpleUserInfoDto" >
            <result column="uid" property="uid" />
            <result column="nickname" property="nickname" />
            <result column="avatar" property="avatar" />
            <result column="intro" property="intro" />
            <result column="webSite" property="webSite" />
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, userId, topicId, commentContent, parentId, type, replyUserId, replyCommentId, rectangle, ipAddress, ipSource, browser, os, isReview, isDelete, createTime, updateTime
    </sql>

    <!-- 根据主题id和评论类型查找所有父评论 -->
    <select id="listParentComment" resultMap="CommentFrontResult">
        SELECT c.id,
               c.commentContent,
               c.rectangle,
               c.ipAddress,
               c.ipSource,
               c.browser,
               c.os,
               c.createTime,
               tui.uid,
               tui.nickname,
               tui.avatar,
               tui.intro,
               tui.webSite
        FROM t_comment c
                 LEFT JOIN t_user_info tui ON c.userId = tui.id
        WHERE topicId = #{topicId}
          AND type = #{type}
          AND parentId IS NULL
          AND isDelete = 0
          AND isReview = 0
        ORDER BY c.id DESC
        LIMIT #{current},#{size};
    </select>

    <!-- 通过父评论查询子评论 -->
    <select id="listReplies" resultMap="ReplyDtoResult">
        SELECT *
        FROM (SELECT c.id,
                     c.commentContent,
                     c.parentId,
                     c.replyCommentId,
                     c.rectangle,
                     c.ipSource,
                     c.browser,
                     c.os,
                     c.createTime,
                     u.nickname,
                     u.uid,
                     u.avatar,
                     u.intro,
                     u.webSite,
                     r.nickname AS                                                        replyNickname,
                     r.uid      AS                                                        replyUid,
                     r.avatar   AS                                                        replyAvatar,
                     r.intro    AS                                                        replyIntro,
                     r.webSite  AS                                                        replyWebSite,
                     ROW_NUMBER() OVER (PARTITION BY parentId ORDER BY c.createTime ASC ) row_num
              FROM t_comment c
                       LEFT JOIN t_user_info u ON c.userId = u.id
                       LEFT JOIN t_user_info r ON c.replyUserId = r.id
              WHERE c.isDelete = 0
                AND c.isReview = 0
                AND c.parentId IN (
                    <foreach collection="parentIds" item="commentId" separator=",">
                        #{commentId}
                    </foreach>
                  )) t
        WHERE 4 > row_num;
    </select>

    <!-- 根据评论id查询回复量 -->
    <select id="replyCountByCommentIds" resultType="cn.apecode.blog.dto.ReplyCountDto">
        SELECT parentId AS commentId,
               COUNT(1) AS replyCount
        FROM t_comment
        WHERE isReview = 0
          AND isDelete = 0
          AND parentId IN 
        <foreach open="(" collection="parentIds" item="commentId" separator="," close=")" >
            #{commentId}
        </foreach>
        GROUP BY parentId;
    </select>

    <!-- 通过页码查询评论下的回复 -->
    <select id="listRepliesByCommentId" resultMap="ReplyDtoResult">
        SELECT c.id,
               c.commentContent,
               c.parentId,
               c.replyCommentId,
               c.rectangle,
               c.browser,
               c.os,
               c.createTime,
               u.nickname,
               u.uid,
               u.avatar,
               u.intro,
               u.webSite,
               r.nickname AS replyNickname,
               r.uid      AS replyUid,
               r.avatar   AS replyAvatar,
               r.intro    AS replyIntro,
               r.webSite  AS replyWebSite
        FROM t_comment c
                 LEFT JOIN t_user_info u ON c.userId = u.id
                 LEFT JOIN t_user_info r ON c.replyUserId = r.id
        WHERE c.isDelete = 0
          AND c.isReview = 0
          AND parentId = #{commentId}
        ORDER BY c.id ASC
        LIMIT #{current}, #{size}
    </select>

    <!-- 根据说说id获取评论数量 -->
    <select id="listTalkCommentCountByTalkId" resultType="cn.apecode.blog.dto.ReplyCountDto">
        SELECT c.topicId AS commentId,
               COUNT(1)  AS replyCount
        FROM t_comment c
        WHERE c.isReview = 0
          AND c.isDelete = 0
          AND c.type = 2
          AND c.parentId IS NULL
          AND topicId IN
        <foreach open="(" collection="talkIds" item="topicId" separator="," close=")" >
            #{topicId}
        </foreach>
        GROUP BY topicId;
    </select>

    <!-- 查询后台评论 -->
    <select id="listCommentBack" resultMap="CommentBackResult">
        SELECT c.id,
               c.commentContent,
               c.parentId,
               c.type,
               c.ipAddress,
               c.ipSource,
               c.browser,
               c.os,
               c.isReview,
               c.createTime,
               a.articleTitle,
               u.nickname,
               u.uid,
               u.avatar,
               u.intro,
               u.webSite,
               r.nickname AS replyNickname,
               r.uid      AS replyUid,
               r.avatar   AS replyAvatar,
               r.intro    AS replyIntro,
               r.webSite  AS replyWebSite
        FROM t_comment c
                 LEFT JOIN t_article a ON c.topicId = a.id
                 LEFT JOIN t_user_info u ON c.userId = u.id
                 LEFT JOIN t_user_info r ON c.replyUserId = r.id
        <where>
            <if test="condition.type != null" >
                c.type = #{condition.type}
            </if>
            <if test="condition.isReview != null" >
                AND c.isReview = #{condition.isReview}
            </if>
            <if test="condition.keywords != null" >
                AND u.nickname LIKE CONCAT('%', #{condition.keywords}, '%')
            </if>
        </where>
        ORDER BY c.id DESC
        LIMIT #{current},#{size};
    </select>

    <!-- 查询后台评论量 -->
    <select id="countComment" resultType="java.lang.Integer">
        SELECT count(1)
        FROM t_comment c
                 LEFT JOIN t_user_info tui ON tui.id = c.userId
        <where>
            <if test="condition.type != null" >
                c.type = #{condition.type}
            </if>
            <if test="condition.isReview != null" >
                AND c.isReview = #{condition.isReview}
            </if>
            <if test="condition.keywords != null" >
                AND tui.nickname LIKE CONCAT('%', #{condition.keywords}, '%')
            </if>
        </where>
    </select>
    <!-- 获取最新评论 -->
    <select id="getNewsComment" resultMap="NewCommentResult">
        SELECT tc.topicId,
               tc.commentContent,
               tc.type,
               tc.createTime,
               tui.nickname,
               tui.uid,
               tui.avatar,
               tui.intro,
               tui.webSite
        FROM t_comment AS tc
                 LEFT JOIN t_user_info tui on tui.id = tc.userId
        WHERE tc.isReview = 0
          AND tc.isDelete = 0
        ORDER BY tc.id DESC
        LIMIT 0, 6;
    </select>

</mapper>
