<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.apecode.blog.mapper.ArticleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.apecode.blog.entity.Article">
        <id column="id" property="id"/>
        <result column="userId" property="userId"/>
        <result column="categoryId" property="categoryId"/>
        <result column="articleTitle" property="articleTitle"/>
        <result column="articleCover" property="articleCover"/>
        <result column="articleContent" property="articleContent"/>
        <result column="type" property="type"/>
        <result column="originalUrl" property="originalUrl"/>
        <result column="isTop" property="isTop"/>
        <result column="status" property="status"/>
        <result column="isDelete" property="isDelete"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
    </resultMap>

    <resultMap id="articleResultMap" type="cn.apecode.blog.dto.ArticleDto">
        <id column="id" property="id"/>
        <result column="categoryId" property="categoryId"/>
        <result column="categoryName" property="categoryName"/>
        <result column="articleTitle" property="articleTitle"/>
        <result column="articleCover" property="articleCover"/>
        <result column="articleContent" property="articleContent"/>
        <result column="type" property="type"/>
        <result column="originalUrl" property="originalUrl"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <collection property="author" ofType="cn.apecode.blog.dto.SimpleUserInfoDto">
            <result column="uid" property="uid"/>
            <result column="nickname" property="nickname"/>
            <result column="avatar" property="avatar"/>
            <result column="intro" property="intro"/>
            <result column="webSite" property="webSite"/>
        </collection>
        <collection property="tags" ofType="cn.apecode.blog.dto.TagDto">
            <result column="tagId" property="id"/>
            <result column="tagName" property="name"/>
        </collection>
    </resultMap>

    <resultMap id="ArticleHomeResultMap" type="cn.apecode.blog.dto.ArticleHomeDto">
        <id column="id" property="id"/>
        <result column="categoryId" property="categoryId"/>
        <result column="categoryName" property="categoryName"/>
        <result column="articleTitle" property="articleTitle"/>
        <result column="articleCover" property="articleCover"/>
        <result column="articleContent" property="articleContent"/>
        <result column="type" property="type"/>
        <result column="isTop" property="isTop"/>
        <result column="createTime" property="createTime"/>
        <collection property="tags" ofType="cn.apecode.blog.dto.TagDto">
            <result column="tagId" property="id"/>
            <result column="tagName" property="name"/>
        </collection>
    </resultMap>

    <resultMap id="ArticleBackResult" type="cn.apecode.blog.dto.ArticleBackDto">
        <id column="id" property="id"/>
        <result column="categoryName" property="categoryName"/>
        <result column="articleTitle" property="articleTitle"/>
        <result column="articleCover" property="articleCover"/>
        <result column="type" property="type"/>
        <result column="isTop" property="isTop"/>
        <result column="status" property="status"/>
        <result column="isDelete" property="isDelete"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <collection property="author" ofType="cn.apecode.blog.dto.SimpleUserInfoDto">
            <result column="uid" property="uid"/>
            <result column="nickname" property="nickname"/>
            <result column="avatar" property="avatar"/>
            <result column="intro" property="intro"/>
            <result column="webSite" property="webSite"/>
        </collection>
        <collection property="tagNames" ofType="java.lang.String">
            <result column="tagName"/>
        </collection>
    </resultMap>

    <resultMap id="ConditionSearchArticleDtoResult" type="cn.apecode.blog.dto.ConditionSearchArticleDto">
        <id column="id" property="articleId"/>
        <result column="articleTitle" property="articleTitle"/>
        <result column="articleCover" property="articleCover"/>
        <result column="type" property="type"/>
        <result column="categoryId" property="categoryId"/>
        <result column="categoryName" property="categoryName"/>
        <result column="createTime" property="createTime"/>
        <collection property="tags" ofType="cn.apecode.blog.dto.TagSearchDto">
            <result column="tagId" property="id"/>
            <result column="tagName" property="name"/>
        </collection>
    </resultMap>

    <resultMap id="ArchiveMonthDtoResult" type="cn.apecode.blog.dto.ArchiveMonthDto">
        <result column="month" property="month"/>
        <collection property="articles" ofType="cn.apecode.blog.dto.ArchiveDto">
            <id column="id" property="id"/>
            <result column="articleTitle" property="articleTitle"/>
            <result column="createTime" property="createTime"/>
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, userId, categoryId, articleTitle, articleCover, articleContent, type, originalUrl, isTop, status, isDelete, createTime, updateTime
    </sql>
    <!-- 查看文章的推荐文章 -->
    <select id="listRecommendArticle" resultType="cn.apecode.blog.dto.ArticleRecommendDto">
        SELECT id,
               articleTitle,
               articleCover,
               createTime
        FROM (SELECT DISTINCT articleId
              FROM (SELECT tagId FROM t_article_tag WHERE articleId = #{articleId}) t
                       LEFT JOIN t_article_tag t1 ON t.tagId = t1.tagId
              WHERE articleId != #{articleId}) t2
                 JOIN t_article a ON t2.articleId = a.id
        WHERE a.isDelete = 0
          AND a.status = 1
        ORDER BY isTop DESC, id DESC
        LIMIT 6;
    </select>
    <!-- 查询id对应文章 -->
    <select id="getArticleById" resultMap="articleResultMap">
        SELECT a.id,
               a.articleTitle,
               a.articleCover,
               a.articleContent,
               a.type,
               a.originalUrl,
               a.createTime,
               a.updateTime,
               a.categoryId,
               c.name AS categoryName,
               t.id   AS tagId,
               t.name AS tagName,
               tui.uid,
               tui.nickname,
               tui.avatar,
               tui.intro,
               tui.webSite
        FROM t_article a
                 JOIN t_category c ON a.categoryId = c.id
                 JOIN t_article_tag tat ON a.id = tat.articleId
                 JOIN t_tag t ON t.id = tat.tagId
                 JOIN t_user_info tui ON tui.id = a.userId
        WHERE a.id = #{articleId}
          AND a.isDelete = 0
          AND a.status = 1;
    </select>
    <!-- 获取首页文章 -->
    <select id="listArticle" resultMap="ArticleHomeResultMap">
        SELECT a.id,
               a.categoryId,
               a.articleTitle,
               a.articleCover,
               SUBSTR(a.articleContent, 1, 500) AS articleContent,
               a.isTop,
               a.type,
               a.createTime,
               c.name                           AS categoryName,
               t.id                             AS tagId,
               t.name                           AS tagName
        FROM (SELECT id,
                     categoryId,
                     articleTitle,
                     articleCover,
                     articleContent,
                     isTop,
                     type,
                     createTime
              FROM t_article
              WHERE isDelete = 0
                AND `status` = 1
              ORDER BY isTop DESC, id DESC
              LIMIT #{current}, #{size}) a
                 JOIN t_category c ON a.categoryId = c.id
                 JOIN t_article_tag tat ON a.id = tat.articleId
                 JOIN t_tag t ON t.id = tat.tagId
        ORDER BY a.isTop DESC, a.id DESC;
    </select>

    <!-- 获取后台文章 -->
    <select id="listArticleBack" resultMap="ArticleBackResult">
        SELECT a.id,
        a.articleTitle,
        a.articleCover,
        a.type,
        a.isTop,
        a.status,
        a.isDelete,
        a.createTime,
        a.updateTime,
        c.name AS categoryName,
        t.name AS tagName,
        tui.nickname,
        tui.uid,
        tui.avatar,
        tui.intro,
        tui.webSite
        FROM (SELECT id,
        userId,
        categoryId,
        articleTitle,
        articleCover,
        type,
        isTop,
        status,
        isDelete,
        createTime,
        updateTime
        FROM t_article
        <where>
            <if test="condition.isDelete != null">
                AND isDelete = #{condition.isDelete}
            </if>
            <if test="condition.keywords != null">
                AND articleTitle LIKE concat('%', #{condition.keywords},'%')
            </if>
            <if test="condition.status != null">
                AND `status` = #{condition.status}
            </if>
            <if test="condition.categoryId != null">
                AND categoryId = #{condition.categoryId}
            </if>
            <if test="condition.type != null">
                AND type = #{condition.type}
            </if>
        </where>
        ORDER BY isTop DESC, id DESC
        LIMIT #{current},#{size}) a
        LEFT JOIN t_category c ON a.categoryId = c.id
        LEFT JOIN t_article_tag tat ON a.id = tat.articleId
        LEFT JOIN t_tag t ON tat.tagId = t.id
        LEFT JOIN t_user_info tui ON a.userId = tui.id
        ORDER BY isTop DESC, a.id DESC;
    </select>

    <!-- 查询后台文章总量 -->
    <select id="articleBackCount" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT a.id)
        FROM t_article a
        <where>
            <if test="condition.isDelete != null">
                AND isDelete = #{condition.isDelete}
            </if>
            <if test="condition.keywords != null">
                AND articleTitle LIKE concat('%', #{condition.keywords},'%')
            </if>
            <if test="condition.status != null">
                AND `status` = #{condition.status}
            </if>
            <if test="condition.categoryId != null">
                AND categoryId = #{condition.categoryId}
            </if>
            <if test="condition.type != null">
                AND type = #{condition.type}
            </if>
        </where>
    </select>

    <!-- 文章统计列表 -->
    <select id="listArticleStatistics" resultType="cn.apecode.blog.dto.ArticleStatisticsDto">
        SELECT DATE_FORMAT(createTime, '%Y-%m-%d') AS date,
               COUNT(1)                            AS count
        FROM t_article
        GROUP BY date
        ORDER BY date DESC;
    </select>

    <!-- 根据条件搜索文章 -->
    <select id="getArticlesByCondition" resultMap="ConditionSearchArticleDtoResult">
        SELECT tac.id,
               tac.articleTitle,
               tac.articleCover,
               tac.type,
               tac.categoryId,
               tac.name AS categoryName,
               tac.createTime,
               tt.id    AS tagId,
               tt.name  AS tagName
        FROM (
            <if test="condition.tagId != null">
                SELECT tat.tagId,
                ta.categoryId,
                ta.id,
                ta.articleTitle,
                ta.articleCover,
                ta.type,
                ta.createTime,
                tc.name
                FROM t_article_tag AS tat
                LEFT JOIN t_article ta on tat.articleId = ta.id
                LEFT JOIN t_category tc on tc.id = ta.categoryId
                WHERE tat.tagId = #{condition.tagId}
                AND ta.isDelete = 0
                AND ta.status = 1
            </if>
            <if test="condition.categoryId != null">
                SELECT ta.id,
                ta.categoryId,
                ta.articleTitle,
                ta.articleCover,
                ta.type,
                ta.createTime,
                tc.name
                FROM t_article AS ta
                LEFT JOIN t_category tc on ta.categoryId = tc.id
                WHERE tc.id = #{condition.categoryId}
                AND ta.isDelete = 0
                AND ta.status = 1
            </if>
        ORDER BY ta.id DESC
        LIMIT #{current}, ${size}) tac
                 LEFT JOIN t_article_tag tat2 on tac.id = tat2.articleId
                 LEFT JOIN t_tag tt on tat2.tagId = tt.id
        ORDER BY tac.id DESC;
    </select>
    <!-- 数量 -->
    <select id="getArticlesByConditionCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM (
        <if test="condition.tagId != null">
            SELECT ta.id
            FROM t_article_tag AS tat
            LEFT JOIN t_article ta on tat.articleId = ta.id
            LEFT JOIN t_category tc on tc.id = ta.categoryId
            WHERE tat.tagId = #{condition.tagId}
            AND ta.isDelete = 0
            AND ta.status = 1
        </if>
        <if test="condition.categoryId != null">
            SELECT ta.id
            FROM t_article AS ta
            LEFT JOIN t_category tc on ta.categoryId = tc.id
            WHERE tc.id = #{condition.categoryId}
            AND ta.isDelete = 0
            AND ta.status = 1
        </if>) tac;
    </select>
    <!-- 获取文章归档 -->
    <select id="listArchives" resultMap="ArchiveMonthDtoResult">
        SELECT
            id,
            articleTitle,
            createTime,
            DATE_FORMAT(createTime, "%Y-%m") AS month
        FROM t_article
        WHERE isDelete = 0
          AND status = 1
        ORDER BY DATE_FORMAT(createTime, "%Y-%m") DESC;
    </select>

</mapper>
