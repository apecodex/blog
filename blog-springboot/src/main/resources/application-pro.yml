server:
  port: 8081
  http2:
    enabled: true
  undertow:
    threads:
      io: 8
      worker: 256
    max-http-post-size: 4MB
    buffer-size: 1024
    direct-buffers: true

spring:
  main:
    # 关闭启动banner
    banner-mode: off
  servlet:
    # 文件上传
    multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 100MB
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://mariadb:3306/blog?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: 数据库账号
    password: 数据库密码
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 连接池名称
      pool-name: DatebookHikariCP
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1

  mvc:
    # 启用过滤器，使_method可用
    hidden-method:
      filter:
        enabled: true
    path match:
      matching-strategy: ant_path_matcher

  redis:
    host: redis
    port: 6379
    password: 密码
    database: 0
    connect-timeout: 10000ms
    lettuce:
      pool:
        # 最大连接数，默认8
        max-active: 1024
        # 最大连接阻塞等待时间，单位毫秒，默认-1ms
        max-wait: 10000ms
        # 最大空闲连接，默认8
        max-idle: 200
        # 最小空闲连接，默认0
        min-idle: 5

  rabbitmq:
    host: rabbitmq
    port: 5672
    username: 账号
    password: 密码
    listener:
      simple:
        acknowledge-mode: manual
        prefetch: 1
    publisher-confirm-type: correlated
    publisher-returns: true

  mail:
    host:
    username:
    password:
    port:
    default-encoding: utf-8
    protocol: smtp

mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  type-aliases-package: cn.apecode.blog.entity
  configuration:
    map-underscore-to-camel-case: false


# 自定义swagger配置
swagger:
  # swagger版本
  version: 1.0

knife4j:
  enable: true

jwt:
  # jwt存储的请求头
  tokenHeader: Authorization
  # jwt 加解密使用的密钥
  secret: jwt-token-secret
  # jwt 超期限时间（60*60*24）
  expiration: 86400
  # jwt 负载中拿到开头
  tokenHead: Bearer

# 高德key
amap:
  key:

upload:
  mode: local
  local:
    # 域名地址，末尾不能加/
    url: http://127.0.0.1
    # 静态资源对外暴露的访问路径
    staticAccessPath: /api/file/
    # 静态资源实际存储路径
    uploadFolder: /usr/local/upload/
  oss:
    # 末尾/必须有
    url:
    endpoint:
    accessKeyId:
    accessKeySecret:
    bucketName:

# QQ登录
qq:
  appId:
  checkTokenUrl: https://graph.qq.com/oauth2.0/me?access_token={access_token}&fmt=json
  userInfoUrl: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}

# 验证码
aj:
  captcha:
    # 滑动验证，底图路径
    jigsaw: classpath:images/jigsaw
    # 缓存local/redis...
    cache-type: redis
    # 验证码类型
    type: blockpuzzle
    water-mark: apecode
    # 校验滑动拼图允许误差偏移量(默认5像素)
    slip-offset: 5
    # aes加密坐标开启或者禁用(true|false)
    aes-status: true
    # 滑动干扰项(0/1/2)
    interference-options: 1
    history-data-clear-enable: false
    # 接口请求次数一分钟限制是否开启 true|false
    req-frequency-limit-enable: false
    # 验证失败5次，get接口锁定
    req-get-lock-limit: 5
    # 验证失败后，锁定时间间隔
    req-get-lock-seconds: 360
    # get接口一分钟内请求数限制
    req-get-minute-limit: 30
    # check接口一分钟内请求数限制
    req-check-minute-limit: 60
    # verify接口一分钟内请求数限制
    req-verify-minute-limit: 60